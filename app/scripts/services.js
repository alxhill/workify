// Generated by CoffeeScript 1.6.3
"use strict";
var Todos;

angular.module('workify').service('Todos', Todos = (function() {
  function Todos($q, $rootScope) {
    this.$q = $q;
    this.$rootScope = $rootScope;
    this.qTodolist = this.$q.defer();
    this.loaded = false;
  }

  Todos.prototype.get = function() {
    var _this = this;
    if (this.loaded) {
      this.qTodolist = this.$q.defer();
    }
    chrome.storage.local.get('todolist', function(_arg) {
      var todolist;
      todolist = _arg.todolist;
      if (todolist != null) {
        _this.$rootScope.$apply(function() {
          return _this.qTodolist.resolve(todolist);
        });
      } else {
        _this.$rootScope.$apply(function() {
          return _this.qTodolist.resolve([]);
        });
      }
      return _this.loaded = true;
    });
    return this.qTodolist.promise;
  };

  Todos.prototype._update = function(todolist) {
    chrome.storage.local.set({
      todolist: todolist
    });
    return chrome.runtime.sendMessage("updateList");
  };

  Todos.prototype.update = function(todolist) {
    var _this = this;
    if (todolist != null) {
      return this._update(todolist);
    } else {
      return this.qTodolist.promise.then(function(todolist) {
        return _this._update(todolist);
      });
    }
  };

  Todos.prototype.add = function(todo) {
    var _this = this;
    console.log(this.qTodolist);
    return this.qTodolist.promise.then(function(todolist) {
      return _this._getNextId().then(function(nextId) {
        todo.id = nextId;
        todolist.push(todo);
        return _this.update(todolist);
      });
    });
  };

  Todos.prototype.remove = function(id) {
    var _this = this;
    return this.qTodolist.promise.then(function(todolist) {
      var todo, _i, _len;
      for (_i = 0, _len = todolist.length; _i < _len; _i++) {
        todo = todolist[_i];
        if (todo.id === id) {
          todolist.splice(todolist.indexOf(todo), 1);
          break;
        }
      }
      return _this.update(todolist);
    });
  };

  Todos.prototype._getNextId = function() {
    var qId;
    qId = this.$q.defer();
    this.qTodolist.promise.then(function(todolist) {
      if (todolist.length === 0) {
        return qId.resolve(0);
      } else {
        return qId.resolve(1 + _.max(todolist, "id").id);
      }
    });
    return qId.promise;
  };

  return Todos;

})());
